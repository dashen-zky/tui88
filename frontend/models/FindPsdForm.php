<?php
/**
 * Created by PhpStorm
 * USER: dashe
 * Date: 2017/3/3
 */
namespace frontend\models;

use Yii;
use yii\base\Model;
use frontend\models\UserAccount;

class FindPsdForm extends Model
{
    public $phone;
    public $verify;
    public $verifyCode;
    public $password;
    public $rePassword;
    public $_account = null;

    public function rules()
    {
        return [
            ["phone" ,"required","message"=>"手机号不能为空","on"=>"one"],
            ['phone','match',"pattern"=>'/^1[34578]\d{9}$/',"message"=>'手机号格式不正确',"on"=>"one"],
            ['phone','validatePhone',"message"=>'该手机号未注册',"on"=>"one"],

            ["verify","required",'message'=>"验证码不能为空","on"=>"one"],
            ['verify',"validateVerify","message"=>"验证码不正确","on"=>"one"],

            ["password","required","message"=>"重置密码不能为空","on"=>"two"],
            ["password","string","length"=>[6,20],"tooShort"=>"密码长度太短","tooLong"=>"密码长度太长","on"=>"two"],

            ["rePassword","required","message"=>"确认密码不能为空","on"=>"two"],
            ["rePassword","compare","compareAttribute"=>"password","message"=>"两次密码不一致","on"=>"two"],
        ];
    }

    /**
     * @return array
     */
    public function scenarios()
    {
        return array_merge(parent::scenarios(),[
            'one' => ["phone","verify"],
            'two' => ["password","rePassword"],
        ]); // TODO: Change the autogenerated stub
    }

    /**
     * @param $attribute
     * @param $params
     * y验证手机号是否已经注册
     */
    public function validatePhone($attribute, $params)
    {
        if(!$this->hasErrors()){
            if(Yii::$app->session["sendMessage"]["phone"] != $this->phone){
                $this->addError($attribute, "手机号验证码不匹配");
            }
            $account = $this->getAccount();
            if(!$account){
                $this->addError($attribute, "该手机号未注册");
            }
        }
    }

    /**
     * @param $attribute
     * @param $params
     * 验证验证码是否正确
     */
    public function validateVerify($attribute, $params)
    {
        if(!$this->hasErrors()){
            if($this->verify != Yii::$app->session["sendMessage"]["verify"]){
                $this->addError($attribute, "验证码不正确");
            }
        }
    }

    /**
     * @return null|static
     * 获取账号实体
     */
    public function getAccount()
    {
        if(!empty($this->_account)){
            return $this->_account;
        }
        $this->_account = UserAccount::findByUsername($this->phone);
        return $this->_account;
    }

    /**
     * @param $errors 错误集
     * @return json   处理过后的错误集
     */
    public function getErrorCodeAndMessage($errors){
        $data = array();
        $data["status"] = 1;
        foreach ($errors as $key => $error) {
            $data["message"][$key] = $error[0];
        }
        return json_encode($data);
    }

}
